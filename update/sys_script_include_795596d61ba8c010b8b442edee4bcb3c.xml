<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_58872_needit.getDataXoomInfo</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>getDataXoomInfo</name>
        <script><![CDATA[var getDataXoomInfo = Class.create();
getDataXoomInfo.prototype = {
    initialize: function() {


    },

    getInfo: function() {
        try {

            var username = gs.getProperty('x_58872_needit.API Username');
            var password = gs.getProperty('x_58872_needit.API Password');
            var r = new sn_ws.RESTMessageV2('x_58872_needit.Get Account Info', 'Get Account Info');

            r.setStringParameter("username", username);
            r.setStringParameter("password", password);
            var response = r.executeAsync();
            response.waitForResponse(30);
            var responseBody = response.getBody();
            var httpStatus = response.getStatusCode();
            var res = JSON.parse(response.getBody());
            if (res.result == "ok") {
                gr = new GlideRecord("x_58872_needit_dataxoom_account_info");
                gr.query();
                if (gr.next()) {
                    gr.account_name = res.accountInfo.accountName;
                    gr.balance = res.accountInfo.accountBalance;
                    gr.currentcharges = res.accountInfo.currentCharges;
                    gr.active = res.accountInfo.active;
                    gr.suspended = res.accountInfo.suspended;
                    gr.disconnected = res.accountInfo.disconnected;
                    gr.used_gb = res.accountInfo.usedGB;
                    gr.update();

                } else {
                    gr.account_name = res.accountInfo.accountName;
                    gr.balance = res.accountInfo.accountBalance;
                    gr.currentcharges = res.accountInfo.currentCharges;
                    gr.active = res.accountInfo.active;
                    gr.suspended = res.accountInfo.suspended;
                    gr.disconnected = res.accountInfo.disconnected;
                    gr.used_gb = res.accountInfo.usedGB;
                    gr.insert();
                }
                gr = new GlideRecord("x_58872_needit_subscribers");
                gr.query();
                gr.deleteMultiple();
                for (var i = 0; i < res.accountSubscribers.length; i++) {
                    gr.first_name = res.accountSubscribers[i].FIRST_NAME;
                    gr.last_name = res.accountSubscribers[i].LAST_NAME;
                    gr.iccid = res.accountSubscribers[i].ICCID;
                    gr.imei = res.accountSubscribers[i].IMEI;
                    gr.phone_number = res.accountSubscribers[i].PHONE_NUMBER;
                    gr.status = res.accountSubscribers[i].STATUS;
                    gr.insert();
                }


            }

        } catch (ex) {

        }

    },

    type: 'getDataXoomInfo'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-10-19 18:11:00</sys_created_on>
        <sys_id>795596d61ba8c010b8b442edee4bcb3c</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>getDataXoomInfo</sys_name>
        <sys_package display_value="DataXoom" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DataXoom">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_include_795596d61ba8c010b8b442edee4bcb3c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-10-19 18:18:54</sys_updated_on>
    </sys_script_include>
</record_update>
